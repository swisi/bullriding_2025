name: docker-image-manual

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Image tag (e.g. v1.0.0, test-123)"
        required: true
        default: "manual"
      platforms:
        description: "Target platforms (CSV)"
        required: false
        default: "linux/amd64,linux/arm64"
      latest:
        description: "Also push :latest tag"
        type: boolean
        required: false
        default: false

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ inputs.tag }}

      - name: Compute tag list
        id: tags
        shell: bash
        run: |
          tags="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.tag }}"
          if [ "${{ inputs.latest }}" = "true" ]; then
            tags="$tags,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          fi
          echo "TAGS=$tags" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: ${{ inputs.platforms }}
          tags: ${{ env.TAGS }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Optional: push also to Docker Hub
      # - name: Log in to Docker Hub
      #   if: ${{ false }}
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Build and push to Docker Hub
      #   if: ${{ false }}
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/bullriding_2025:latest
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
